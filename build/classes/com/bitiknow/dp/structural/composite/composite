The composite pattern is a structural design pattern. 
In the composite pattern, a tree structure exists where identical operations can be performed on leaves and nodes. A node in a tree is a class that can have children. A node class is a 'composite' class. A leaf in a tree is a 'primitive' class that does not have children. 
The children of a composite can be leaves or other composites.

The leaf class and the composite class share a common 'component' interface that defines the common operations that 
can be performed on leaves and composites. When an operation on a composite is performed, this operation is performed on 
all children of the composite, whether they are leaves or composites. 
Thus, the composite pattern can be used to perform common operations on the objects that compose a tree.

"Compose objects into tree structure to represent part-whole hierarchies.
Composite lets client treat individual objects and compositions of objects uniformly".

Composite design pattern treats each node in two ways-Composite or leaf.Composite means it can have other objects below it.
leaf means it has no objects below it.

What makes the Composite pattern one of the most beautiful is the power of recursion. 
I can explain this with the same organization example. You want to find the total salary paid to all employees of the organization. 
It is nothing but the salary of CEO + the salary paid to all the departments. What is the salary of a department? 
It is the salary of the department head + the salary of all projects. 
What is the total salary of a project? It is the salary of the project manager + the salary of all the project members. 
In short, the salary of  anything is the salary of self + the salary of all its sub groups.


Usage in JDK:
java.util.Map#putAll(Map)
java.util.List#addAll(Collection)
java.util.Set#addAll(Collection)
java.nio.ByteBuffer#put(ByteBuffer) (also on CharBuffer, ShortBuffer, IntBuffer, LongBuffer, FloatBuffer and DoubleBuffer)
java.awt.Container#add(Component) 


Composite pattern is used where we need to treat a group of objects in similar way as a single object.
Composite pattern composes objects in term of a tree structure to represent part as well as whole hierarchy.
 This type of design pattern comes under structural pattern as this pattern creates 
a tree structure of group of objects.